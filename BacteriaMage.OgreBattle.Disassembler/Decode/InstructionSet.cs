// github.com/BacteriaMage

namespace BacteriaMage.OgreBattle.Disassembler.Decode;

using static FlowBehavior;

public enum FlowBehavior
{
    Nxt,
    Brn,
    Cal,
    Jmp,
    End,
}

public class InstructionSet
{
    
    
    public string[] DefineInstructions()
    {
        return
        [
            D(0x00, "BRK", L(1), Nxt, ""),
            D(0x01, "ORA", L(2), Nxt, "($LL,X)"),
            D(0x02, "COP", L(2), Nxt, "#$LL"),
            D(0x03, "ORA", L(2), Nxt, "$LL,S"),
            D(0x04, "TSB", L(2), Nxt, "$LL"),
            D(0x05, "ORA", L(2), Nxt, "$LL"),
            D(0x06, "ASL", L(2), Nxt, "$LL"),
            D(0x07, "ORA", L(2), Nxt, "[$LL]"),
            D(0x08, "PHP", L(1), Nxt, ""),
            D(0x09, "ORA", M(3), Nxt, "#$LL"),
            D(0x0A, "ASL", L(1), Nxt, ""),
            D(0x0B, "PHD", L(1), Nxt, ""),
            D(0x0C, "TSB", L(3), Nxt, "$HHLL"),
            D(0x0D, "ORA", L(3), Nxt, "$HHLL"),
            D(0x0E, "ASL", L(3), Nxt, "$HHLL"),
            D(0x0F, "ORA", L(4), Nxt, "$HHMMLL"),
            D(0x10, "BPL", L(2), Brn, "@"),
            D(0x11, "ORA", L(2), Nxt, "($LL),Y"),
            D(0x12, "ORA", L(2), Nxt, "($LL)"),
            D(0x13, "ORA", L(2), Nxt, "($LL,S),Y"),
            D(0x14, "TRB", L(2), Nxt, "$LL"),
            D(0x15, "ORA", L(2), Nxt, "$LL,X"),
            D(0x16, "ASL", L(2), Nxt, "$LL,X"),
            D(0x17, "ORA", L(2), Nxt, "[$LL],Y"),
            D(0x18, "CLC", L(1), Nxt, ""),
            D(0x19, "ORA", L(3), Nxt, "$HHLL,Y"),
            D(0x1A, "INC", L(1), Nxt, ""),
            D(0x1B, "TCS", L(1), Nxt, ""),
            D(0x1C, "TRB", L(3), Nxt, "$HHLL"),
            D(0x1D, "ORA", L(3), Nxt, "$HHLL,X"),
            D(0x1E, "ASL", L(3), Nxt, "$HHLL,X"),
            D(0x1F, "ORA", L(4), Nxt, "$HHMMLL,X"),
            D(0x20, "JSR", L(3), Cal, "$HHLL"),
            D(0x21, "AND", L(2), Nxt, "($LL,X)"),
            D(0x22, "JSL", L(4), Cal, "$HHMMLL"),
            D(0x23, "AND", L(2), Nxt, "$LL,S"),
            D(0x24, "BIT", L(2), Nxt, "$LL"),
            D(0x25, "AND", L(2), Nxt, "$LL"),
            D(0x26, "ROL", L(2), Nxt, "$LL"),
            D(0x27, "AND", L(2), Nxt, "[$LL]"),
            D(0x28, "PLP", L(1), Nxt, ""),
            D(0x29, "AND", M(3), Nxt, "#$LL"),
            D(0x2A, "ROL", L(1), Nxt, ""),
            D(0x2B, "PLD", L(1), Nxt, ""),
            D(0x2C, "BIT", L(3), Nxt, "$HHLL"),
            D(0x2D, "AND", L(3), Nxt, "$HHLL"),
            D(0x2E, "ROL", L(3), Nxt, "$HHLL"),
            D(0x2F, "AND", L(4), Nxt, "$HHMMLL"),
            D(0x30, "BMI", L(2), Brn, "@"),
            D(0x31, "AND", L(2), Nxt, "($LL),Y"),
            D(0x32, "AND", L(2), Nxt, "($LL)"),
            D(0x33, "AND", L(2), Nxt, "($LL,S),Y"),
            D(0x34, "BIT", L(2), Nxt, "$LL,X"),
            D(0x35, "AND", L(2), Nxt, "$LL,X"),
            D(0x36, "ROL", L(2), Nxt, "$LL,X"),
            D(0x37, "AND", L(2), Nxt, "[$LL],Y"),
            D(0x38, "SEC", L(1), Nxt, ""),
            D(0x39, "AND", L(3), Nxt, "$HHLL,Y"),
            D(0x3A, "DEC", L(1), Nxt, ""),
            D(0x3B, "TSC", L(1), Nxt, ""),
            D(0x3C, "BIT", L(3), Nxt, "$HHLL,X"),
            D(0x3D, "AND", L(3), Nxt, "$HHLL,X"),
            D(0x3E, "ROL", L(3), Nxt, "$HHLL,X"),
            D(0x3F, "AND", L(4), Nxt, "$HHMMLL,X"),
            D(0x40, "RTI", L(1), End, ""),
            D(0x41, "EOR", L(2), Nxt, "($LL,X)"),
            D(0x42, "WDM", L(2), Nxt, ""),
            D(0x43, "EOR", L(2), Nxt, "$LL,S"),
            D(0x44, "MVP", L(3), Nxt, "#$LL,#$LL"),
            D(0x45, "EOR", L(2), Nxt, "$LL"),
            D(0x46, "LSR", L(2), Nxt, "$LL"),
            D(0x47, "EOR", L(2), Nxt, "[$LL]"),
            D(0x48, "PHA", L(1), Nxt, ""),
            D(0x49, "EOR", M(3), Nxt, "#$LL"),
            D(0x4A, "LSR", L(1), Nxt, ""),
            D(0x4B, "PHK", L(1), Nxt, ""),
            D(0x4C, "JMP", L(3), Jmp, "$HHLL"),
            D(0x4D, "EOR", L(3), Nxt, "$HHLL"),
            D(0x4E, "LSR", L(3), Nxt, "$HHLL"),
            D(0x4F, "EOR", L(4), Nxt, "$HHMMLL"),
            D(0x50, "BVC", L(2), Brn, "@"),
            D(0x51, "EOR", L(2), Nxt, "($LL),Y"),
            D(0x52, "EOR", L(2), Nxt, "($LL)"),
            D(0x53, "EOR", L(2), Nxt, "($LL,S),Y"),
            D(0x54, "MVN", L(3), Nxt, "#$LL,#$LL"),
            D(0x55, "EOR", L(2), Nxt, "$LL,X"),
            D(0x56, "LSR", L(2), Nxt, "$LL,X"),
            D(0x57, "EOR", L(2), Nxt, "[$LL],Y"),
            D(0x58, "CLI", L(1), Nxt, ""),
            D(0x59, "EOR", L(3), Nxt, "$HHLL,Y"),
            D(0x5A, "PHY", L(1), Nxt, ""),
            D(0x5B, "TCD", L(1), Nxt, ""),
            D(0x5C, "JMP", L(4), Jmp, "$HHMMLL"),
            D(0x5D, "EOR", L(3), Nxt, "$HHLL,X"),
            D(0x5E, "LSR", L(3), Nxt, "$HHLL,X"),
            D(0x5F, "EOR", L(4), Nxt, "$HHMMLL,X"),
            D(0x60, "RTS", L(1), End, ""),
            D(0x61, "ADC", L(2), Nxt, "($LL,X)"),
            D(0x62, "PER", L(3), Nxt, "@"),
            D(0x63, "ADC", L(2), Nxt, "$LL,S"),
            D(0x64, "STZ", L(2), Nxt, "$LL"),
            D(0x65, "ADC", L(2), Nxt, "$LL"),
            D(0x66, "ROR", L(2), Nxt, "$LL"),
            D(0x67, "ADC", L(2), Nxt, "[$LL]"),
            D(0x68, "PLA", L(1), Nxt, ""),
            D(0x69, "ADC", M(3), Nxt, "#$LL"),
            D(0x6A, "ROR", L(1), Nxt, ""),
            D(0x6B, "RTL", L(1), End, ""),
            D(0x6C, "JMP", L(3), Jmp, "($HHLL)"),
            D(0x6D, "ADC", L(3), Nxt, "$HHLL"),
            D(0x6E, "ROR", L(3), Nxt, "$HHLL"),
            D(0x6F, "ADC", L(4), Nxt, "$HHMMLL"),
            D(0x70, "BVS", L(2), Brn, "@"),
            D(0x71, "ADC", L(2), Nxt, "($LL),Y"),
            D(0x72, "ADC", L(2), Nxt, "($LL)"),
            D(0x73, "ADC", L(2), Nxt, "($LL,S),Y"),
            D(0x74, "STZ", L(2), Nxt, "$LL,X"),
            D(0x75, "ADC", L(2), Nxt, "$LL,X"),
            D(0x76, "ROR", L(2), Nxt, "$LL,X"),
            D(0x77, "ADC", L(2), Nxt, "[$LL],Y"),
            D(0x78, "SEI", L(1), Nxt, ""),
            D(0x79, "ADC", L(3), Nxt, "$HHLL,Y"),
            D(0x7A, "PLY", L(1), Nxt, ""),
            D(0x7B, "TDC", L(1), Nxt, ""),
            D(0x7C, "JMP", L(3), Jmp, "($HHLL,X)"),
            D(0x7D, "ADC", L(3), Nxt, "$HHLL,X"),
            D(0x7E, "ROR", L(3), Nxt, "$HHLL,X"),
            D(0x7F, "ADC", L(4), Nxt, "$HHMMLL,X"),
            D(0x80, "BRA", L(2), Brn, "@"),
            D(0x81, "STA", L(2), Nxt, "($LL,X)"),
            D(0x82, "BRL", L(3), Brn, "@"),
            D(0x83, "STA", L(2), Nxt, "$LL,S"),
            D(0x84, "STY", L(2), Nxt, "$LL"),
            D(0x85, "STA", L(2), Nxt, "$LL"),
            D(0x86, "STX", L(2), Nxt, "$LL"),
            D(0x87, "STA", L(2), Nxt, "[$LL]"),
            D(0x88, "DEY", L(1), Nxt, ""),
            D(0x89, "BIT", M(3), Nxt, "#$LL"),
            D(0x8A, "TXA", L(1), Nxt, ""),
            D(0x8B, "PHB", L(1), Nxt, ""),
            D(0x8C, "STY", L(3), Nxt, "$HHLL"),
            D(0x8D, "STA", L(3), Nxt, "$HHLL"),
            D(0x8E, "STX", L(3), Nxt, "$HHLL"),
            D(0x8F, "STA", L(4), Nxt, "$HHMMLL"),
            D(0x90, "BCC", L(2), Brn, "@"),
            D(0x91, "STA", L(2), Nxt, "($LL),Y"),
            D(0x92, "STA", L(2), Nxt, "($LL)"),
            D(0x93, "STA", L(2), Nxt, "($LL,S),Y"),
            D(0x94, "STY", L(2), Nxt, "$LL,X"),
            D(0x95, "STA", L(2), Nxt, "$LL,X"),
            D(0x96, "STX", L(2), Nxt, "$LL,Y"),
            D(0x97, "STA", L(2), Nxt, "[$LL],Y"),
            D(0x98, "TYA", L(1), Nxt, ""),
            D(0x99, "STA", L(3), Nxt, "$HHLL,Y"),
            D(0x9A, "TXS", L(1), Nxt, ""),
            D(0x9B, "TXY", L(1), Nxt, ""),
            D(0x9C, "STZ", L(3), Nxt, "$HHLL"),
            D(0x9D, "STA", L(3), Nxt, "$HHLL,X"),
            D(0x9E, "STZ", L(3), Nxt, "$HHLL,X"),
            D(0x9F, "STA", L(4), Nxt, "$HHMMLL,X"),
            D(0xA0, "LDY", X(3), Nxt, "#$LL"),
            D(0xA1, "LDA", L(2), Nxt, "($LL,X)"),
            D(0xA2, "LDX", X(3), Nxt, "#$LL"),
            D(0xA3, "LDA", L(2), Nxt, "$LL,S"),
            D(0xA4, "LDY", L(2), Nxt, "$LL"),
            D(0xA5, "LDA", L(2), Nxt, "$LL"),
            D(0xA6, "LDX", L(2), Nxt, "$LL"),
            D(0xA7, "LDA", L(2), Nxt, "[$LL]"),
            D(0xA8, "TAY", L(1), Nxt, ""),
            D(0xA9, "LDA", M(3), Nxt, "#$LL"),
            D(0xAA, "TAX", L(1), Nxt, ""),
            D(0xAB, "PLB", L(1), Nxt, ""),
            D(0xAC, "LDY", L(3), Nxt, "$HHLL"),
            D(0xAD, "LDA", L(3), Nxt, "$HHLL"),
            D(0xAE, "LDX", L(3), Nxt, "$HHLL"),
            D(0xAF, "LDA", L(4), Nxt, "$HHMMLL"),
            D(0xB0, "BCS", L(2), Brn, "@"),
            D(0xB1, "LDA", L(2), Nxt, "($LL),Y"),
            D(0xB2, "LDA", L(2), Nxt, "($LL)"),
            D(0xB3, "LDA", L(2), Nxt, "($LL,S),Y"),
            D(0xB4, "LDY", L(2), Nxt, "$LL,X"),
            D(0xB5, "LDA", L(2), Nxt, "$LL,X"),
            D(0xB6, "LDX", L(2), Nxt, "$LL,Y"),
            D(0xB7, "LDA", L(2), Nxt, "[$LL],Y"),
            D(0xB8, "CLV", L(1), Nxt, ""),
            D(0xB9, "LDA", L(3), Nxt, "$HHLL,Y"),
            D(0xBA, "TSX", L(1), Nxt, ""),
            D(0xBB, "TYX", L(1), Nxt, ""),
            D(0xBC, "LDY", L(3), Nxt, "$HHLL,X"),
            D(0xBD, "LDA", L(3), Nxt, "$HHLL,X"),
            D(0xBE, "LDX", L(3), Nxt, "$HHLL,Y"),
            D(0xBF, "LDA", L(4), Nxt, "$HHMMLL,X"),
            D(0xC0, "CPY", X(3), Nxt, "#$LL"),
            D(0xC1, "CMP", L(2), Nxt, "($LL,X)"),
            D(0xC2, "REP", L(2), Nxt, "#$LL"),
            D(0xC3, "CMP", L(2), Nxt, "$LL,S"),
            D(0xC4, "CPY", L(2), Nxt, "$LL"),
            D(0xC5, "CMP", L(2), Nxt, "$LL"),
            D(0xC6, "DEC", L(2), Nxt, "$LL"),
            D(0xC7, "CMP", L(2), Nxt, "[$LL]"),
            D(0xC8, "INY", L(1), Nxt, ""),
            D(0xC9, "CMP", M(3), Nxt, "#$LL"),
            D(0xCA, "DEX", L(1), Nxt, ""),
            D(0xCB, "WAI", L(1), Nxt, ""),
            D(0xCC, "CPY", L(3), Nxt, "$HHLL"),
            D(0xCD, "CMP", L(3), Nxt, "$HHLL"),
            D(0xCE, "DEC", L(3), Nxt, "$HHLL"),
            D(0xCF, "CMP", L(4), Nxt, "$HHMMLL"),
            D(0xD0, "BNE", L(2), Brn, "@"),
            D(0xD1, "CMP", L(2), Nxt, "($LL),Y"),
            D(0xD2, "CMP", L(2), Nxt, "($LL)"),
            D(0xD3, "CMP", L(2), Nxt, "($LL,S),Y"),
            D(0xD4, "PEI", L(2), Nxt, "$LL"),
            D(0xD5, "CMP", L(2), Nxt, "$LL,X"),
            D(0xD6, "DEC", L(2), Nxt, "$LL,X"),
            D(0xD7, "CMP", L(2), Nxt, "[$LL],Y"),
            D(0xD8, "CLD", L(1), Nxt, ""),
            D(0xD9, "CMP", L(3), Nxt, "$HHLL,Y"),
            D(0xDA, "PHX", L(1), Nxt, ""),
            D(0xDB, "STP", L(1), Nxt, ""),
            D(0xDC, "JMP", L(3), Jmp, "[$HHLL]"),
            D(0xDD, "CMP", L(3), Nxt, "$HHLL,X"),
            D(0xDE, "DEC", L(3), Nxt, "$HHLL,X"),
            D(0xDF, "CMP", L(4), Nxt, "$HHMMLL,X"),
            D(0xE0, "CPX", X(3), Nxt, "#$LL"),
            D(0xE1, "SBC", L(2), Nxt, "($LL,X)"),
            D(0xE2, "SEP", L(2), Nxt, "#$LL"),
            D(0xE3, "SBC", L(2), Nxt, "$LL,S"),
            D(0xE4, "CPX", L(2), Nxt, "$LL"),
            D(0xE5, "SBC", L(2), Nxt, "$LL"),
            D(0xE6, "INC", L(2), Nxt, "$LL"),
            D(0xE7, "SBC", L(2), Nxt, "[$LL]"),
            D(0xE8, "INX", L(1), Nxt, ""),
            D(0xE9, "SBC", M(3), Nxt, "#$LL"),
            D(0xEA, "NOP", L(1), Nxt, ""),
            D(0xEB, "XBA", L(1), Nxt, ""),
            D(0xEC, "CPX", L(3), Nxt, "$HHLL"),
            D(0xED, "SBC", L(3), Nxt, "$HHLL"),
            D(0xEE, "INC", L(3), Nxt, "$HHLL"),
            D(0xEF, "SBC", L(4), Nxt, "$HHMMLL"),
            D(0xF0, "BEQ", L(2), Brn, "@"),
            D(0xF1, "SBC", L(2), Nxt, "($LL),Y"),
            D(0xF2, "SBC", L(2), Nxt, "($LL)"),
            D(0xF3, "SBC", L(2), Nxt, "($LL,S),Y"),
            D(0xF4, "PEA", L(3), Nxt, "#$HHLL"),
            D(0xF5, "SBC", L(2), Nxt, "$LL,X"),
            D(0xF6, "INC", L(2), Nxt, "$LL,X"),
            D(0xF7, "SBC", L(2), Nxt, "[$LL],Y"),
            D(0xF8, "SED", L(1), Nxt, ""),
            D(0xF9, "SBC", L(3), Nxt, "$HHLL,Y"),
            D(0xFA, "PLX", L(1), Nxt, ""),
            D(0xFB, "XCE", L(1), Nxt, ""),
            D(0xFC, "JSR", L(3), Cal, "($HHLL,X)"),
            D(0xFD, "SBC", L(3), Nxt, "$HHLL,X"),
            D(0xFE, "INC", L(3), Nxt, "$HHLL,X"),
            D(0xFF, "SBC", L(4), Nxt, "$HHMMLL,X"),
        ];
    }
    
    private int L(int size) => 0;
    private int M(int size) => 0;
    private int X(int size) => 0;
    
    private string D(int opcode, string mnemonic, int length, FlowBehavior behavior, string pattern)
    {
        return "";
    }
}
